{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,uBACjCE,EAASH,SAASC,cAAc,sBAChCG,EAAWJ,SAASC,cAAc,wBAOxC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACSC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAGRG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAEpCA,EAAM,G,CAhBbR,EAAOe,aACL,QACA,iHAEFf,EAAOgB,iBAAiB,UAgBpB,SAAsBC,GACxBA,EAAMC,iBACN,IAAIC,EAAaC,OAAOjB,EAAQkB,OAChC,MAAMC,EAAYF,OAAOhB,EAAOiB,OAC1BE,EAAcH,OAAOf,EAASgB,OACpC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrClB,EAAckB,EAAGL,GACdM,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqBrB,QAAiBC,MAAU,IAGnDqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoBvB,QAAeC,MAAU,IAGnDW,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\nformEl.setAttribute(\n  'style',\n  'display: flex; align-content: center;flex-wrap: wrap;flex-direction: column;align-items: flex-end; gap: 10px;'\n);\nformEl.addEventListener('submit', exportPromis);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n  const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n    resolve({ position, delay });\n    // Fulfill\n      } else {\n                reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n    // Reject\n    function exportPromis(event) {\n  event.preventDefault();\n  let delayValue = Number(delayEl.value);\n  const stepValue = Number(stepEl.value);\n  const amountValue = Number(amountEl.value);\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.warning(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayValue += stepValue;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","setAttribute","addEventListener","event","preventDefault","delayValue","Number","value","stepValue","amountValue","i","then","$parcel$interopDefault","Notify","success","catch","warning"],"version":3,"file":"03-promises.9d9b38be.js.map"}